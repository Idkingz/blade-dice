{"version":3,"sources":["App.js","index.js"],"names":["tks","require","App","useState","bladeTrick","setBladeTrick","level","setLevel","getRandom","obj","keys","Object","key","Math","floor","random","length","className","id","onChange","event","target","value","type","enter","variation","side","trick","out","onClick","e","in","tricks","variations","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qoCAGMA,EAAMC,EAAQ,IAwDLC,MAtDf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAY,SAAZA,EAAaC,EAAKH,GACtB,IAAMI,EAAOC,OAAOD,KAAKD,GACnBG,EAAMF,EAAKG,KAAKC,MAAMD,KAAKE,SAAWL,EAAKM,SACjD,GAAIP,EAAIG,GAAKN,OAASA,EACpB,OAAOM,EACTJ,EAAUC,EAAKH,IAuBjB,OACE,qBAAKW,UAAU,MAAf,SACI,sBAAKA,UAAU,OAAf,UACE,oBAAGC,GAAG,QAAN,UACE,4CACA,uBAAOC,SAAU,SAAAC,GAAK,OAAIb,EAASa,EAAMC,OAAOC,QAAQC,KAAK,YAE/D,uBACA,qCAAQnB,EAAWoB,SACnB,2CAAcpB,EAAWqB,aACzB,uCAAUrB,EAAWsB,QACrB,wCAAWtB,EAAWuB,SACtB,sCAASvB,EAAWwB,OACpB,uBACA,iCACE,wBAAQN,MAAM,QAAQO,QAnChC,SAAcC,GACZ,IACMN,EAKFxB,EALF+B,GACAC,EAIEhC,EAJFgC,OACAJ,EAGE5B,EAHF4B,IACAK,EAEEjC,EAFFiC,WACAP,EACE1B,EADF0B,KAGIC,EAAQ,CACZH,MAAOhB,EAAUgB,EAAOlB,GACxBsB,IAAKpB,EAAUoB,EAAKtB,GACpBqB,MAAOnB,EAAUwB,EAAQ1B,GACzBmB,UAAWjB,EAAUyB,EAAY3B,GACjCoB,KAAMlB,EAAUkB,EAAMpB,IAGxBD,GAAc,SAAAD,GAAU,oBAAMA,cAAeuB,OAkBrC,2BC/CZO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.843ce5e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst tks = require('./tricks.json')\n\nfunction App() {\n  const [bladeTrick, setBladeTrick] = useState({});\n  const [level, setLevel] = useState(1)\n\n  const getRandom = (obj, level) => {\n    const keys = Object.keys(obj)\n    const key = keys[Math.floor(Math.random() * keys.length)]\n    if (obj[key].level <= level)\n      return key\n    getRandom(obj, level)\n  }\n\n  function sort(e) {\n    const { \n      in: enter, \n      tricks,\n      out,\n      variations,\n      side,\n    } = tks\n\n    const trick = {\n      enter: getRandom(enter, level),\n      out: getRandom(out, level),\n      trick: getRandom(tricks, level),\n      variation: getRandom(variations, level),\n      side: getRandom(side, level)\n    }\n\n    setBladeTrick(bladeTrick => ({bladeTrick, ...trick}))\n  }\n\n  return (\n    <div className=\"App\">\n        <div className=\"card\">\n          <p id=\"level\">\n            <span>Level:  </span>\n            <input onChange={event => setLevel(event.target.value)} type=\"text\" />\n          </p>\n          <br />\n          <p>In: {bladeTrick.enter}</p>\n          <p>Varition: {bladeTrick.variation}</p>\n          <p>Side: {bladeTrick.side}</p>\n          <p>Trick: {bladeTrick.trick}</p>\n          <p>Out: {bladeTrick.out}</p>\n          <br />\n          <center>\n            <button value=\"blood\" onClick={sort}>Trick</button>\n          </center>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}